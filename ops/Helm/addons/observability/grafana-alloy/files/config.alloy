logging {
  level  = "info"
  format = "json"
}

/////////////////////////////
// Receive OTLP from apps  //
/////////////////////////////

otelcol.receiver.otlp "in" {
  grpc { endpoint = "0.0.0.0:4317" }
  http { endpoint = "0.0.0.0:4318" }
  output {
    metrics = [otelcol.processor.batch.metrics.input]
    traces  = [otelcol.processor.batch.traces.input]
    logs    = [otelcol.processor.batch.logs.input]
  }
}

otelcol.processor.batch "metrics" {
  output { metrics = [otelcol.exporter.otlphttp.prom.input] }
}
otelcol.processor.batch "traces" {
  output { traces  = [otelcol.exporter.otlp.tempo.input] }
}
otelcol.processor.batch "logs" {
  output { logs    = [otelcol.exporter.otlphttp.loki.input] }
}

//////////////////////////////////////////
// METRICS → Prometheus (OTLP / HTTP)   //
//////////////////////////////////////////

otelcol.exporter.otlphttp "prom" {
  // otlphttp appends /v1/metrics → full path becomes /api/v1/otlp/v1/metrics
  client {
    endpoint = "http://prometheus-prometheus.prometheus-operator.svc:9090/api/v1/otlp"
    tls { insecure = true }
  }
}

/////////////////////////////
// TRACES → Tempo (gRPC)   //
/////////////////////////////

otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "grafana-tempo.grafana.svc:4317"
    tls { insecure = true }
  }
}

////////////////////////////////
// LOGS → Loki (OTLP / HTTP)  //
////////////////////////////////

otelcol.exporter.otlphttp "loki" {
  client {
    endpoint = "http://grafana-loki.grafana.svc:3100/otlp"
    tls { insecure = true }
  }
}

//////////////////////////////////////////////////////////////
// (Optional) K8s container logs → Loki classic /v1/push    //
//////////////////////////////////////////////////////////////

discovery.kubernetes "pods" {
  role = "pod"
}

loki.source.kubernetes "pods" {
  targets    = discovery.kubernetes.pods.targets
  forward_to = [loki.process.k8s.receiver]
}

loki.process "k8s" {
  stage.labels {
    values = {
      namespace = "namespace",
      pod       = "pod",
      container = "container",
    }
  }
  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://grafana-loki.grafana.svc:3100/loki/api/v1/push"
  }
}
